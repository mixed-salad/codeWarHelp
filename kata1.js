/*
Enough is enough!
Alice and Bob were on a holiday. Both of them took many pictures of the places they've been, and now they want to show Charlie their entire collection. However, Charlie doesn't like these sessions, since the motive usually repeats. He isn't fond of seeing the Eiffel tower 40 times. He tells them that he will only sit during the session if they show the same motive at most N times. Luckily, Alice and Bob are able to encode the motive as a number. Can you help them to remove numbers such that their list contains each number only up to N times, without changing the order?

Task
Given a list lst and a number N, create a new list that contains each number of lst at most N times without reordering. For example if N = 2, and the input is [1,2,3,1,2,1,2,3], you take [1,2,3,1,2], drop the next [1,2] since this would lead to 1 and 2 being in the result 3 times, and then take 3, which leads to [1,2,3,1,2,3].

Example
  deleteNth ([1,1,1,1],2) // return [1,1]

  deleteNth ([20,37,20,21],1) // return [20,37,21]


*/

//My code

function deleteNth(arr, n) {
  const frequencies = {};
  for (let i = 0; i < arr.length; i++) {
    if (!frequencies[arr[i]]) {
      frequencies[arr[i]] = 1;
    } else {
      if (frequencies[arr[i]] < n) {
        frequencies[arr[i]]++;
      } else {
        arr.splice(i, 1);
      }
    }
  }
  return arr;
}



/*Test Results:
 Basic tests
Test Passed: Value deep equals [20, 37, 21]
Test Passed: Value deep equals [1, 1, 3, 3, 7, 2, 2, 2]
x = 3 - Expected: [1, 2, 3, 1, 1, 2, 2, 3, 3, 4, 5], instead got: [1, 2, 3, 1, 1, 2, 2, 3, 3, 2, 4, 5, 1]
Test Passed: Value deep equals [1, 1, 1, 1, 1]
Test Passed: Value deep equals []
Completed in 6ms
 Random tests
 Testing for delete_nth([27, 18, 18, 18, 39, 8, 6, 39, 39, 39, 8, 39, 39, 39, 18, 8, 8, 39, 27, 18, 27, 18, 18, 18, 6, 8, 8, 12, 27, 27, 8, 27], 6)
It should work on random inputs too! - Expected: [27, 18, 18, 18, 39, 8, 6, 39, 39, 39, 8, 39, 39, 18, 8, 8, 27, 18, 27, 18, 6, 8, 8, 12, 27, 27, 27], instead got: [27, 18, 18, 18, 39, 8, 6, 39, 39, 39, 8, 39, 39, 18, 8, 8, 27, 18, 27, 18, 18, 6, 8, 8, 12, 27, 27, 27]
 Testing for delete_nth([47, 47, 50, 5, 22, 22, 43, 22, 47, 42, 47, 43, 44, 22, 5, 5, 47, 50, 43, 42, 47, 47, 42, 22, 13, 47, 42, 5, 50, 13, 16, 43, 22, 13, 50, 5, 42, 5, 5, 43, 42, 13], 9)
 Testing for delete_nth([12, 12, 49, 12, 38, 39, 39, 49, 38, 38, 41, 39, 38, 39, 38, 38, 12, 41, 12, 31, 38, 6, 5, 6, 49, 31, 41, 38, 39, 41, 39, 6, 49, 6, 41, 38, 6, 6, 41, 6, 6, 39, 49, 17, 6, 41, 39, 38, 49, 6, 41, 17, 41, 12, 41, 49], 10)
 Testing for delete_nth([25, 25, 25, 47, 23, 21, 25, 25, 23, 25, 23, 21, 21, 25, 21, 21, 47, 25, 25, 21, 21, 21, 21, 21, 23, 47, 25, 47], 7)
It should work on random inputs too! - Expected: [25, 25, 25, 47, 23, 21, 25, 25, 23, 25, 23, 21, 21, 25, 21, 21, 47, 21, 21, 23, 47, 47], instead got: [25, 25, 25, 47, 23, 21, 25, 25, 23, 25, 23, 21, 21, 25, 21, 21, 47, 25, 21, 21, 21, 23, 47, 47]
 Testing for delete_nth([28, 37, 28, 37, 4, 4, 48, 28, 48, 48, 28, 28, 6, 6, 37, 28, 6, 28, 4, 4, 28, 6, 37, 37, 37, 4, 6, 48, 28, 28, 37, 28, 48, 48, 48, 4, 37, 28, 4, 28, 48, 28, 6, 48, 37, 14, 37], 1)
It should work on random inputs too! - Expected: [28, 37, 4, 48, 6, 14], instead got: [28, 37, 37, 4, 48, 48, 48, 28, 6, 37, 6, 4, 28, 37, 37, 6, 28, 37, 48, 48, 37, 4, 48, 6, 37, 14]
Completed in 1ms
 Testing for delete_nth([38, 40, 2, 38, 45, 36, 2, 22, 40, 38, 22, 45, 40, 40, 45, 40, 45, 36, 45, 22, 45, 45, 22, 2, 36, 2, 45, 20, 36, 45, 36, 2, 22, 45, 22, 45, 2, 45, 45, 45, 22, 45, 36, 36, 36, 2, 36, 2, 45, 45, 22], 3)
It should work on random inputs too! - Expected: [38, 40, 2, 38, 45, 36, 2, 22, 40, 38, 22, 45, 40, 45, 36, 22, 2, 36, 20], instead got: [38, 40, 2, 38, 45, 36, 2, 22, 40, 38, 22, 45, 40, 45, 45, 36, 45, 22, 45, 2, 36, 2, 20, 45, 2, 45, 45, 45, 45, 45, 36, 2, 2, 45]
 Testing for delete_nth([11, 11, 23, 23, 1, 11, 11, 6, 12, 23, 6, 12, 11, 11, 6, 23, 6, 23, 6, 23, 1, 11, 11, 6, 11, 11, 1, 12, 11, 11, 23], 10)
It should work on random inputs too! - Expected: [11, 11, 23, 23, 1, 11, 11, 6, 12, 23, 6, 12, 11, 11, 6, 23, 6, 23, 6, 23, 1, 11, 11, 6, 11, 11, 1, 12, 23], instead got: [11, 11, 23, 23, 1, 11, 11, 6, 12, 23, 6, 12, 11, 11, 6, 23, 6, 23, 6, 23, 1, 11, 11, 6, 11, 11, 1, 12, 11, 23]
Completed in 1ms
 Testing for delete_nth([29, 7, 29, 7, 27, 29, 22, 22, 22, 22, 5, 40, 7, 29, 5, 5, 5, 10, 5, 7, 22, 29, 29, 40, 27, 5, 5, 10, 23, 40, 29, 22, 22, 29, 40, 22, 27, 27, 10, 5, 23, 29, 23, 10, 7, 10, 29, 7, 40, 29, 29, 10, 40, 7, 10, 5, 5, 27, 22, 29, 23, 10, 27, 40, 29, 22, 10, 5, 7, 23, 29, 7, 40, 5], 1)
It should work on random inputs too! - Expected: [29, 7, 27, 22, 5, 40, 10, 23], instead got: [29, 7, 7, 27, 22, 22, 22, 5, 40, 29, 5, 10, 7, 29, 40, 5, 10, 23, 29, 22, 40, 27, 10, 23, 23, 10, 10, 7, 29, 10, 7, 5, 27, 29, 10, 40, 22, 5, 23, 7, 5]
 Testing for delete_nth([8, 45, 46, 8, 46, 29, 29, 7, 16, 29, 30, 46, 7, 8, 29, 29, 37, 46, 7, 29, 45, 30, 46, 7, 46, 46, 29, 46, 29, 45, 37, 30, 30, 37, 37, 30, 8, 7, 46, 29, 7, 37, 29, 45, 8, 29, 37, 8, 45, 7], 8)
It should work on random inputs too! - Expected: [8, 45, 46, 8, 46, 29, 29, 7, 16, 29, 30, 46, 7, 8, 29, 29, 37, 46, 7, 29, 45, 30, 46, 7, 46, 46, 29, 46, 29, 45, 37, 30, 30, 37, 37, 30, 8, 7, 7, 37, 45, 8, 37, 8, 45, 7], instead got: [8, 45, 46, 8, 46, 29, 29, 7, 16, 29, 30, 46, 7, 8, 29, 29, 37, 46, 7, 29, 45, 30, 46, 7, 46, 46, 29, 46, 29, 45, 37, 30, 30, 37, 37, 30, 8, 7, 29, 7, 37, 45, 8, 37, 8, 45, 7]
Completed in 1ms
 Testing for delete_nth([46, 46, 42, 42, 9, 42, 42, 46, 9, 46, 46, 10, 42, 10, 42, 46, 24, 9, 10, 46, 9, 9, 42, 46, 46, 42, 42, 9, 46], 10)
 Testing for delete_nth([45, 18, 45, 36, 45, 45, 17, 36, 18, 18, 18, 18, 18, 36, 18, 36, 36, 45, 18, 15, 36], 9)
 Testing for delete_nth([47, 23, 16, 16, 23, 16, 16, 47, 47, 16, 16, 23, 47, 28, 16, 23, 47, 23, 47, 47, 23, 16, 47, 47, 28, 47, 47, 16, 23, 28, 16, 28, 28, 47], 2)
It should work on random inputs too! - Expected: [47, 23, 16, 16, 23, 47, 28, 28], instead got: [47, 23, 16, 16, 23, 16, 47, 16, 23, 28, 23, 23, 47, 16, 47, 28, 47, 23, 28, 28, 47]
 Testing for delete_nth([14, 8, 11, 8, 45, 14, 32, 13, 11, 20, 14, 15, 15, 20, 13, 8, 45, 13, 20, 15, 11, 8, 45, 11, 15, 11, 14, 45, 13, 20, 20, 50, 45, 20, 15, 13, 15, 45, 8, 15, 8, 14, 11, 45, 15, 8], 2)
It should work on random inputs too! - Expected: [14, 8, 11, 8, 45, 14, 32, 13, 11, 20, 15, 15, 20, 13, 45, 50], instead got: [14, 8, 11, 8, 45, 14, 32, 13, 11, 20, 15, 15, 20, 13, 45, 20, 15, 8, 45, 15, 14, 13, 20, 50, 20, 13, 45, 15, 14, 45, 8]
 Testing for delete_nth([9, 38, 18, 18, 38, 38, 17, 17, 9, 18, 17, 17, 43, 18, 38, 43, 18, 9, 18, 17, 18, 17, 38, 18, 9, 38, 43, 18, 17, 43, 38, 9, 17, 17, 38, 43, 17, 9], 2)
It should work on random inputs too! - Expected: [9, 38, 18, 18, 38, 17, 17, 9, 43, 43], instead got: [9, 38, 18, 18, 38, 17, 17, 9, 17, 17, 43, 38, 43, 9, 17, 17, 18, 38, 18, 43, 9, 17, 43, 9]
 Testing for delete_nth([18, 17, 48, 17, 43, 17, 18, 17, 18, 18, 43, 48, 18, 17, 43, 43, 18, 18, 49, 43, 43, 18, 43, 43, 43, 48, 18, 43, 17, 17, 49], 8)
It should work on random inputs too! - Expected: [18, 17, 48, 17, 43, 17, 18, 17, 18, 18, 43, 48, 18, 17, 43, 43, 18, 18, 49, 43, 43, 18, 43, 43, 48, 17, 17, 49], instead got: [18, 17, 48, 17, 43, 17, 18, 17, 18, 18, 43, 48, 18, 17, 43, 43, 18, 18, 49, 43, 43, 18, 43, 43, 48, 43, 17, 17, 49]
Completed in 1ms
 Testing for delete_nth([33, 33, 8, 18, 41, 41, 41, 41, 33, 8, 27, 8, 27, 33, 33, 27, 8, 8, 27, 27, 33, 8, 27, 33], 6)
 Testing for delete_nth([9, 1, 36, 9, 8, 36, 36, 8, 36, 8, 9, 49, 9, 1, 36, 1, 8, 9, 36, 9, 36, 49, 36, 9, 36, 49, 9, 1, 9, 1, 1, 8, 36, 1, 1, 9], 9)
 Testing for delete_nth([7, 7, 32, 7, 25, 7, 32, 7, 7, 7, 25, 32, 7, 25, 25, 7], 1)
It should work on random inputs too! - Expected: [7, 32, 25], instead got: [7, 32, 25, 32, 7, 25, 32, 25, 25]
 Testing for delete_nth([47, 47, 47, 32, 44, 37, 37, 37, 44, 47, 47, 44, 47, 44, 47], 9)
 Testing for delete_nth([43, 19, 3, 19, 3, 14, 14, 43, 3, 3, 14, 33, 14, 41, 41, 27, 43, 43, 27, 41, 33, 3, 3, 41, 3, 14, 14, 39, 47, 43, 41, 14, 41, 14, 3, 43, 41, 3, 41, 41, 27, 47, 33, 3, 33, 41, 33], 3)
It should work on random inputs too! - Expected: [43, 19, 3, 19, 3, 14, 14, 43, 3, 14, 33, 41, 41, 27, 43, 27, 41, 33, 39, 47, 27, 47, 33], instead got: [43, 19, 3, 19, 3, 14, 14, 43, 3, 14, 33, 14, 41, 41, 27, 43, 27, 41, 33, 3, 3, 14, 39, 47, 41, 41, 3, 41, 41, 27, 47, 33, 33, 33]
Completed in 1ms
 Testing for delete_nth([47, 47, 36, 17, 25, 47, 17, 25, 21, 21, 36, 46, 25, 25, 36, 17, 36, 32, 36, 47, 21, 21, 47, 36, 46, 36, 50, 47, 46, 25, 25, 32, 46, 25, 32, 17, 47, 36, 32, 46, 36, 32, 32, 46, 32, 32, 32, 25, 30, 25, 25, 46, 46, 30, 47, 36, 46, 47, 17, 32], 5)
It should work on random inputs too! - Expected: [47, 47, 36, 17, 25, 47, 17, 25, 21, 21, 36, 46, 25, 25, 36, 17, 36, 32, 36, 47, 21, 21, 47, 46, 50, 46, 25, 32, 46, 32, 17, 32, 46, 32, 30, 30, 17], instead got: [47, 47, 36, 17, 25, 47, 17, 25, 21, 21, 36, 46, 25, 25, 36, 17, 36, 32, 36, 47, 21, 21, 47, 46, 50, 46, 25, 32, 46, 32, 17, 36, 32, 46, 32, 32, 46, 32, 32, 25, 30, 25, 46, 30, 36, 47, 17]
 Testing for delete_nth([3, 9, 50, 27, 4, 27, 27, 27, 4, 5, 27, 50, 50, 10, 50, 5, 3, 5, 4, 27, 10, 4, 50, 10, 27, 27, 9, 50, 27, 27], 3)
It should work on random inputs too! - Expected: [3, 9, 50, 27, 4, 27, 27, 4, 5, 50, 50, 10, 5, 3, 5, 4, 10, 10, 9], instead got: [3, 9, 50, 27, 4, 27, 27, 4, 5, 50, 50, 10, 50, 5, 3, 5, 4, 10, 4, 10, 27, 9, 27]
 Testing for delete_nth([31, 31, 31, 31, 41, 41, 31, 31, 31, 31, 31, 41, 31, 31, 31, 31, 31], 8)
It should work on random inputs too! - Expected: [31, 31, 31, 31, 41, 41, 31, 31, 31, 31, 41], instead got: [31, 31, 31, 31, 41, 41, 31, 31, 31, 31, 41, 31, 31]
 Testing for delete_nth([5, 39, 5, 39, 39, 15, 39, 39, 39, 5, 39, 5, 39, 39, 5], 3)
It should work on random inputs too! - Expected: [5, 39, 5, 39, 39, 15, 5], instead got: [5, 39, 5, 39, 39, 15, 39, 5, 5, 39, 5]
 Testing for delete_nth([5, 38, 5, 33, 38, 38, 5, 38, 38, 33, 33, 38, 38, 38, 5, 38, 5, 5, 38, 5], 9)
 Testing for delete_nth([19, 17, 33, 15, 11, 46, 33, 17, 15, 19, 15, 33, 15, 15, 46, 19, 1, 19, 19, 11, 46, 17, 11, 33, 33, 46, 11, 11, 17, 11, 15, 33, 11, 15, 17, 15, 46, 11, 15, 33, 17, 15, 15, 19, 17, 46, 33, 11], 8)
It should work on random inputs too! - Expected: [19, 17, 33, 15, 11, 46, 33, 17, 15, 19, 15, 33, 15, 15, 46, 19, 1, 19, 19, 11, 46, 17, 11, 33, 33, 46, 11, 11, 17, 11, 15, 33, 11, 15, 17, 15, 46, 11, 33, 17, 19, 17, 46, 33], instead got: [19, 17, 33, 15, 11, 46, 33, 17, 15, 19, 15, 33, 15, 15, 46, 19, 1, 19, 19, 11, 46, 17, 11, 33, 33, 46, 11, 11, 17, 11, 15, 33, 11, 15, 17, 15, 46, 11, 33, 17, 15, 19, 17, 46, 33]
Completed in 1ms
 Testing for delete_nth([39, 4, 44, 23, 4, 44, 44, 39, 39, 39, 44, 23, 9, 39, 44, 4, 23, 39, 23, 39, 39], 9)
 Testing for delete_nth([37, 1, 47, 37, 37, 41, 41, 47, 38, 37, 38, 41, 38, 41, 8, 1, 8, 37, 41, 38, 11, 41, 8, 38, 38, 1, 8, 38, 1, 37, 1, 38, 1, 38, 8, 8, 8, 37, 41, 41, 41, 47, 37, 37, 37, 8, 8, 38, 47, 8], 3)
It should work on random inputs too! - Expected: [37, 1, 47, 37, 37, 41, 41, 47, 38, 38, 41, 38, 8, 1, 8, 11, 8, 1, 47], instead got: [37, 1, 47, 37, 37, 41, 41, 47, 38, 38, 41, 38, 8, 1, 8, 41, 38, 11, 8, 38, 1, 8, 1, 1, 1, 8, 8, 37, 41, 47, 37, 8, 38, 47]
Completed in 1ms
 Testing for delete_nth([30, 15, 27, 27, 19, 35, 30, 19, 27, 19, 35, 41, 30, 30, 35, 15, 27, 27, 15, 41, 15, 30, 30, 30, 19, 35, 30, 35, 19, 30, 35, 35, 30, 41, 27, 33, 27, 27, 19, 35, 19, 33, 35, 35], 6)
It should work on random inputs too! - Expected: [30, 15, 27, 27, 19, 35, 30, 19, 27, 19, 35, 41, 30, 30, 35, 15, 27, 27, 15, 41, 15, 30, 30, 19, 35, 35, 19, 35, 41, 27, 33, 19, 33], instead got: [30, 15, 27, 27, 19, 35, 30, 19, 27, 19, 35, 41, 30, 30, 35, 15, 27, 27, 15, 41, 15, 30, 30, 19, 35, 35, 19, 35, 35, 41, 27, 33, 27, 19, 35, 19, 33, 35]
 Testing for delete_nth([38, 17, 45, 27, 38, 17, 27, 38, 17, 28, 45, 45, 45, 27, 27, 17, 27, 36, 45, 27, 45, 38, 46, 38, 38, 17, 46, 27, 17, 46, 27, 27, 38, 38, 38, 17, 17], 2)
It should work on random inputs too! - Expected: [38, 17, 45, 27, 38, 17, 27, 28, 45, 36, 46, 46], instead got: [38, 17, 45, 27, 38, 17, 27, 17, 28, 45, 45, 27, 27, 36, 27, 38, 46, 38, 46, 17, 46, 27, 38, 17]
Completed in 1ms
 Testing for delete_nth([6, 6, 6, 6, 6, 22, 6, 10, 6, 22, 10, 16, 10, 6, 22, 16, 16, 10, 10, 6, 16], 2)
It should work on random inputs too! - Expected: [6, 6, 22, 10, 22, 10, 16, 16], instead got: [6, 6, 6, 22, 10, 22, 10, 16, 10, 22, 16, 10, 6]
 Testing for delete_nth([9, 50, 46, 50, 50, 9, 33, 33, 46, 33, 46, 46, 33, 50, 50, 33, 50, 50, 50, 46, 46, 46, 33, 50], 3)
It should work on random inputs too! - Expected: [9, 50, 46, 50, 50, 9, 33, 33, 46, 33, 46], instead got: [9, 50, 46, 50, 50, 9, 33, 33, 46, 33, 46, 33, 50, 50, 50, 46, 33]
 Testing for delete_nth([30, 30, 11, 25, 11, 42, 25, 30, 25, 30, 30, 30, 42, 11, 11, 30, 30, 25, 25, 42, 11, 30, 42, 42, 42, 25, 11, 11, 30], 4)
It should work on random inputs too! - Expected: [30, 30, 11, 25, 11, 42, 25, 30, 25, 30, 42, 11, 11, 25, 42, 42], instead got: [30, 30, 11, 25, 11, 42, 25, 30, 25, 30, 30, 42, 11, 11, 30, 25, 42, 30, 42, 42, 25, 11]
 Testing for delete_nth([42, 8, 40, 11, 13, 42, 11, 11, 34, 34, 34, 13, 8, 42, 40, 42, 42, 11, 34, 11, 21, 21, 34, 8, 34, 11, 21, 34, 8, 8, 8, 42, 21, 9, 34, 42, 11, 21, 21, 11, 40, 13, 9, 34, 8, 13, 21, 42, 34, 13, 21, 11, 11, 21, 13], 7)
It should work on random inputs too! - Expected: [42, 8, 40, 11, 13, 42, 11, 11, 34, 34, 34, 13, 8, 42, 40, 42, 42, 11, 34, 11, 21, 21, 34, 8, 34, 11, 21, 34, 8, 8, 8, 42, 21, 9, 42, 11, 21, 21, 40, 13, 9, 8, 13, 21, 13, 13], instead got: [42, 8, 40, 11, 13, 42, 11, 11, 34, 34, 34, 13, 8, 42, 40, 42, 42, 11, 34, 11, 21, 21, 34, 8, 34, 11, 21, 34, 8, 8, 8, 42, 21, 9, 42, 11, 21, 21, 40, 13, 9, 8, 13, 21, 42, 13, 11, 21, 13]
Completed in 1ms
 Testing for delete_nth([39, 21, 21, 23, 23, 39, 23, 23, 23, 21, 21, 23, 39, 39, 23, 21, 39, 21, 39, 23, 23, 21, 21, 21, 23, 23], 3)
It should work on random inputs too! - Expected: [39, 21, 21, 23, 23, 39, 23, 21, 39], instead got: [39, 21, 21, 23, 23, 39, 23, 23, 21, 23, 39, 23, 39, 39, 23, 21, 23]
 Testing for delete_nth([49, 25, 44, 25, 49, 49, 43, 44, 49, 7, 25, 43, 49, 43, 43, 25, 44, 49, 43, 44, 43, 25, 7, 49, 44, 43, 49, 30, 49, 25, 44, 7, 25, 25, 44, 44, 25], 1)
It should work on random inputs too! - Expected: [49, 25, 44, 43, 7, 30], instead got: [49, 25, 44, 49, 43, 49, 7, 43, 43, 43, 44, 43, 43, 7, 44, 49, 30, 25, 7, 25, 44]
 Testing for delete_nth([7, 47, 47, 6, 47, 47, 6, 7, 47, 47, 7, 6], 1)
It should work on random inputs too! - Expected: [7, 47, 6], instead got: [7, 47, 6, 47, 6, 47, 7]
Completed in 1ms
 Testing for delete_nth([45, 16, 8, 45, 8, 19, 19, 16, 45, 16, 45, 8, 19, 41, 42, 19, 8, 16, 16, 45, 19, 45, 16, 45, 16, 42, 16, 45, 27, 41, 41, 16, 19, 8, 8, 41, 8, 19, 16, 19, 19, 45], 9)
 Testing for delete_nth([44, 44, 44, 34, 44, 5, 44, 5, 44, 44, 5, 34, 5, 5], 10)
 Testing for delete_nth([40, 45, 47, 45, 28, 40, 40, 29, 49, 1, 49, 24, 49, 21, 21, 45, 21, 21, 1, 1, 45, 45, 49, 24, 45, 28, 1, 40, 45, 1, 29, 45, 1, 24, 45, 29, 24, 1, 28, 49, 29, 40, 45, 49, 29, 21, 21, 1, 1, 29, 40, 29, 29, 40, 1], 2)
It should work on random inputs too! - Expected: [40, 45, 47, 45, 28, 40, 29, 49, 1, 49, 24, 21, 21, 1, 24, 28, 29], instead got: [40, 45, 47, 45, 28, 40, 29, 49, 1, 49, 24, 21, 21, 21, 21, 1, 45, 49, 24, 28, 40, 1, 29, 1, 45, 29, 1, 28, 29, 45, 29, 21, 1, 40, 29, 1] */
